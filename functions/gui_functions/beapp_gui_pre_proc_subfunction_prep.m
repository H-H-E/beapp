function [pre_proc_button_list,pre_proc_button_geometry,pre_proc_ver_geometry,skipline_panel,...
    adv_pre_proc_button_list,adv_pre_proc_button_geometry,adv_pre_proc_ver_geometry] =...
    beapp_gui_pre_proc_subfunction_prep (current_sub_panel,grp_proc_info)

% spacer for formatting in supergui
extra_space_line = {{'style','text','string',''}};

switch current_sub_panel
    case 'pre_proc_general'
        
        load(grp_proc_info.ref_net_library_options);
        
        %check if any elements are empty -- they will cause an error later
        %on
        if any(any(ismissing(net_library_options))) == 1
            warning ('Net_library_options file contains missing values. Fill these in, this may break the GUI');
        end
       
        net_menu_name_options = ['none',net_library_options.Net_Full_Name'];
        
        selected_net_types = cell(5,1);
        selected_net_types(:) = deal({''});
        
        if ~isempty(grp_proc_info.src_unique_nets)
            selected_net_types (1:length(grp_proc_info.src_unique_nets)) = grp_proc_info.src_unique_nets;
        end
        
        preproc_mod_inds = find(ismember(grp_proc_info.beapp_toggle_mods.Module_Output_Type,'cont'));
        
        pre_proc_button_list = [{{'style','text','string', 'General BEAPP Pre-Processing Settings:'}},...
            {{'style','text','string', 'Select Modules to Run Below:'}},...
            {{'style','uitable','data', [grp_proc_info.beapp_toggle_mods.Mod_Names(preproc_mod_inds),...
            num2cell(grp_proc_info.beapp_toggle_mods.Module_On(preproc_mod_inds)), ...
            num2cell(grp_proc_info.beapp_toggle_mods.Module_Export_On(preproc_mod_inds))],'tag','pre_proc_mod_sel_table',...
            'ColumnEditable',[false,true,true], 'ColumnName',{'Module','Module On?','Save Module Outputs?'}}},...
            extra_space_line,{{'style','pushbutton','string', 'Advanced','tag','gen_pre_proc_adv ',...
            'CallBack',['beapp_gui_trigger_adv_settings_panel']}}, ...
            {{'style','text','string', 'Select Net/ Sensor Layout Types in Dataset:'}},...
             extra_space_line,{{'style','pushbutton','string', 'Add New Sensor Layout','tag','add_new_net',...
            'CallBack','beapp_gui_add_nets_to_library(grp_proc_info,''pre_proc_net_sel_table'');'}},extra_space_line,...
            {{'style','uitable','data', selected_net_types,'tag','pre_proc_net_sel_table',...
            'ColumnEditable',true, 'ColumnName',{'Net/Sensor Layout Type'},...
            'ColumnFormat',{net_menu_name_options}}}];
        
        
        pre_proc_button_geometry = {1 1 1 [.65 .35] 1 [.25 .5 .25] 1};
        pre_proc_ver_geometry=  [1 1 4.1 .75 1 .75 3];
        skipline_panel ='off';
        
    case 'format'
        
        if ~isequal(grp_proc_info.src_linenoise,'input_table')
            curr_linenoise_disp_val = num2str(grp_proc_info.src_linenoise);
        else
            curr_linenoise_disp_val = grp_proc_info.src_linenoise;
        end
        
        if ~isequal(grp_proc_info.event_tag_offsets,'input_table')
            curr_offset_disp_val = num2str(grp_proc_info.event_tag_offsets);
        else
            curr_offset_disp_val = grp_proc_info.event_tag_offsets;
        end
        
        input_table_needed = (isequal(grp_proc_info.src_linenoise,'input_table')||...
            isequal(grp_proc_info.event_tag_offsets,'input_table')||...
            grp_proc_info.src_format_typ ==1);
        
        pre_proc_button_list = [{{'style','text','string', 'BEAPP Format Settings:'}},...
            {{'style','text','string', 'Select source file format: '}},...
            {{'style','text','string', 'Select source presentation software: '}},...
            {{'style','popupmenu','string', {'.mat','.mff (continuous, unsegmented)','.mff (pre-segmented)','.set (EEGLAB, continuous, unsegmented)','.set (EEGLAB, segmented'},...
            'tag','src_format_typ','Value',  grp_proc_info.src_format_typ}},...
            {{'style','popupmenu','string', {'None','E-Prime','Presentation'},...
            'tag','src_pres_typ','Value',  grp_proc_info.src_presentation_software+1}},...
            extra_space_line,...
            {{'style','text','string', 'Line Noise Frequency Information:'}},...
            {{'style','text','string', 'Event Offset Information:'}},...
            {{'style','checkbox','String','Get Line Noise from File Info Table','tag','use_src_linenoise_table_checkbox','value',...
            isequal(grp_proc_info.src_linenoise,'input_table'),'callback', ['beapp_gui_hide_unneeded_inputs(''use_src_linenoise_table_checkbox'',',...
            '{''src_linenoise_value'',''dataset_linenoise_prompt''},''Off'',''NoCompVal''); beapp_gui_hide_unneeded_inputs(''use_src_linenoise_table_checkbox'',',...
            '{''file_info_table_text'',''sel_file_info_table'',''fi_sel_p'',''file_info_table_text''},''On'',''NoCompVal'');']}},...
            {{'style','checkbox', 'string','Get Offset from File Info Table','tag','use_file_offset_table_checkbox','value', isequal(grp_proc_info.event_tag_offsets,...
            'input_table'),'callback', ['beapp_gui_hide_unneeded_inputs(''use_file_offset_table_checkbox'',',...
            '{''dataset_offset_prompt'',''src_event_tag_offset_val'',''fi_sel_p'',''file_info_table_text''},''Off'',''NoCompVal''); beapp_gui_hide_unneeded_inputs(''use_file_offset_table_checkbox'',',...
            '{''file_info_table_text'',''sel_file_info_table''},''On'',''NoCompVal'');']}},...
            {{'style','text','string', 'Dataset-Wide Line Noise Frequency:','tag','dataset_linenoise_prompt',...
            'Visible', logical_to_on_off_helper(~isequal(grp_proc_info.src_linenoise,'input_table'))}},...
            {{'style','text','string', 'Dataset-Wide Event Tag Offset in ms (def: 0)','tag','dataset_offset_prompt',...
            'Visible', logical_to_on_off_helper(~isequal(grp_proc_info.event_tag_offsets,'input_table'))}},...
            {{'style','edit','string', curr_linenoise_disp_val, 'tag','src_linenoise_value',...
            'Visible', logical_to_on_off_helper(~isequal(grp_proc_info.src_linenoise,'input_table'))}},...
            {{'style','edit','string', curr_offset_disp_val, 'tag','src_event_tag_offset_val',...
            'Visible', logical_to_on_off_helper(~isequal(grp_proc_info.event_tag_offsets,'input_table'))}},...
             extra_space_line,...
            {{'style','pushbutton','string','Select File Information Table','Visible', logical_to_on_off_helper(input_table_needed) ,'tag','sel_file_info_table',...
            'CallBack',['grp_proc_info.beapp_file_info_table =  beapp_gui_select_info_or_rerun_table(grp_proc_info.beapp_file_info_table,''file_info_table_text'');']}},...
            extra_space_line,...
            {{'style','pushbutton','string', 'Edit Optional Format Settings ', 'tag','matlab_var_button',...
            'CallBack',['beapp_gui_trigger_adv_settings_panel']}},...
            {{'style','text','string','Selected:','tag','fi_sel_p'}},{{'style','edit','tag','file_info_table_text','string', grp_proc_info.beapp_file_info_table,...
            'Visible', logical_to_on_off_helper(input_table_needed)}}];
        
        pre_proc_button_geometry = {1 [.5 .5] [.5 .5]  1 [.5 .5]  [.5 .5]  [.5 .5]  [.5 .5]   1 [.4 .25 .35] [.1 .7] };
        pre_proc_ver_geometry=     [1 1       1        1 1         1         1       1        1 1 1 ];
        skipline_panel ='off';
        
    case 'prepp'
        pre_proc_button_list = [{{'style','text','string', 'BEAPP PREP Pipeline Settings:'}},...
            {{'style','checkbox','string', 'Output PREP Excel Report? (default: on)',...
            'tag','prepp_xls_out_on','value',   grp_proc_info.beapp_toggle_mods{'prepp','Module_Xls_Out_On'}}}];
        pre_proc_button_geometry = {1 1};
        pre_proc_ver_geometry=  [1 1];
        skipline_panel ='on';
        
    case 'filt'
        
        pre_proc_button_list = [{{'style','text','string', ' BEAPP Filter Settings:'}},...
            {{'style','text','string', sprintf(['Select filters to apply with corresponding frequency cutoffs :', '\n',...
            'Note: notch and cleanline cutoff frequencies should be set to NaN, as they will use the line noise frequency set in format'])}},...
            {{'style','uitable','data', [grp_proc_info.beapp_filters.Properties.RowNames,...
            num2cell(logical(grp_proc_info.beapp_filters.Filt_On)),...
            num2cell(grp_proc_info.beapp_filters.Filt_Cutoff_Freq)],'tag','filt_sel_table',...
            'ColumnEditable',[false,true,true], 'ColumnFormat',{'char','logical','numeric'},...
            'ColumnName',{'Filter','Filter On?','Filter Cutoff Frequency'}}},...
            {{'style','pushbutton','string', 'Advanced Filter Settings ', 'tag','filt_adv_type_prompt',...
            'Callback',['beapp_gui_trigger_adv_settings_panel']}},extra_space_line, extra_space_line];
        
        pre_proc_button_geometry = {1 1 1 [.46 .27 .27]};
        pre_proc_ver_geometry=  [1 1 2.3 .7];
        skipline_panel ='off';
        
    case 'rsamp'
        pre_proc_button_list = [{{'style','text','string', 'BEAPP Resampling Settings:'}},...
            {{'style','text','string', 'Target sampling rate for resampling: ', 'tag','rsamp_srate_prompt'}},...
            {{'style','edit','string',  num2str(grp_proc_info.beapp_rsamp_srate),'tag','rsamp_srate'}}];
        pre_proc_button_geometry = {1 [.7 .3]};
        pre_proc_ver_geometry=  [1 1];
        skipline_panel ='on';
        
    case 'ica'
        
        if length(grp_proc_info.src_unique_nets) ==  length(grp_proc_info.beapp_ica_additional_chans_lbls)
            ica_elec_disp = cellfun(@ (x) strrep(num2str(x),'',',') ,grp_proc_info.beapp_ica_additional_chans_lbls,'UniformOutput',0);
        elseif length(grp_proc_info.src_unique_nets) >  length(grp_proc_info.beapp_ica_additional_chans_lbls)
            ica_elec_disp = cell(1,length(grp_proc_info.src_unique_nets));
            ica_elec_disp(1: length(grp_proc_info.beapp_ica_additional_chans_lbls)) =  cellfun(@(x) strrep(num2str(x),'',','),grp_proc_info.beapp_ica_additional_chans_lbls,'UniformOutput',0);
        elseif length(grp_proc_info.src_unique_nets) <  length(grp_proc_info.beapp_ica_additional_chans_lbls)
            ica_elec_disp = cell(1,length(grp_proc_info.src_unique_nets));
        end
        
        if ~isequal(grp_proc_info.src_unique_nets,{''})
            pre_proc_button_list = [{{'style','text','string', 'BEAPP ICA Settings:'}},...
                {{'style','text','string', 'Select ICA method: '}},...
                {{'style','popupmenu','string', {'ICA with MARA','HAPPE','ICA only'},...
                'tag','ica_type_resp','Value',  grp_proc_info.beapp_ica_type}},...
                extra_space_line, {{'style','pushbutton','string', 'Advanced ICA Settings ', 'tag','ica_adv_type_prompt',...
                'Callback',['beapp_gui_trigger_adv_settings_panel']}},...
                {{'style','text','string', sprintf(['Enter additional electrodes (beyond 10-20 electrodes) to analyze' '\n' 'for each selected net (separated by commas):'])}},...
                {{'style','uitable','data', ica_elec_disp,'tag','ica_extra_elec_sel_table',...
                'ColumnEditable',true(1,length(grp_proc_info.src_unique_nets)), 'ColumnName',grp_proc_info.src_unique_nets}}];
            pre_proc_button_geometry = {1 [.5 .5] [.5 .5] 1 1};
            pre_proc_ver_geometry=  [   1 1       .75 2 1];
        else
            pre_proc_button_list = [{{'style','text','string', 'ICA/ HAPPE in BEAPP requires entering source nets on main pre-processing page'}}];
            pre_proc_button_geometry = {1};
            pre_proc_ver_geometry=  [1];
        end
        
        skipline_panel ='on';
        
    case 'rereference'
        
        pre_proc_button_list = [{{'style','text','string', 'BEAPP Re-Reference Settings:'}},...
            {{'style','text','string', 'Select re-reference method: '}},...
            {{'style','popupmenu','string', {'average','CSD Laplacian','specific electrodes','REST'},...
            'tag','reref_type_resp','Value',  grp_proc_info.reref_typ,'callback', ['beapp_gui_hide_unneeded_inputs(''reref_type_resp'',',...
            '{''reref_elec_sel_prompt'',''ref_elec_sel_table''},''On'',3);']}}];
        
        if ~isequal(grp_proc_info.src_unique_nets,{''})
            
            if length(grp_proc_info.src_unique_nets) ==  length(grp_proc_info.beapp_reref_chan_inds)
                ica_elec_disp = cellfun(@ (x) strrep(num2str(x),'',',') ,grp_proc_info.beapp_reref_chan_inds,'UniformOutput',0);
            elseif length(grp_proc_info.src_unique_nets) >  length(grp_proc_info.beapp_reref_chan_inds)
                ica_elec_disp = cell(1,length(grp_proc_info.src_unique_nets));
                ica_elec_disp(1: length(grp_proc_info.beapp_reref_chan_inds)) =  cellfun(@(x) strrep(num2str(x),'',','),grp_proc_info.beapp_reref_chan_inds,'UniformOutput',0);
            elseif length(grp_proc_info.src_unique_nets) <  length(grp_proc_info.beapp_reref_chan_inds)
                ica_elec_disp = cell(1,length(grp_proc_info.src_unique_nets));
            end
            
            pre_proc_button_list = [pre_proc_button_list,extra_space_line, {{'style','pushbutton','string', 'Advanced Re-Reference Settings ',...
                'Callback',['beapp_gui_trigger_adv_settings_panel']}},...
                {{'style','text','string', 'Enter rereference electrodes for each selected net (separated by spaces or commas):',...
                'tag','reref_elec_sel_prompt', 'Visible', logical_to_on_off_helper(isequal(grp_proc_info.reref_typ,3))}},...
                {{'style','uitable','data',ica_elec_disp,'tag','ref_elec_sel_table',...
                'ColumnEditable',true(1,length(grp_proc_info.src_unique_nets)), 'ColumnName',grp_proc_info.src_unique_nets,...
                'Visible', logical_to_on_off_helper(isequal(grp_proc_info.reref_typ,3))}}];
            pre_proc_button_geometry = {1 [.5 .5] [.5 .5] 1 1};
            pre_proc_ver_geometry=  [   1 1       .75 2 1];
        else
            pre_proc_button_list = [pre_proc_button_list, ...
                {{'style','text','string', 'Re-referencing to specific electrodes requires entering source nets on main pre-processing page',...
                'tag','reref_elec_sel_prompt'}},...
                {{'style','pushbutton','string', 'Advanced Re-Reference Settings ','tag','reref_adv_type_prompt',...
                'Callback','beapp_gui_trigger_adv_settings_panel'}},extra_space_line, extra_space_line];
            pre_proc_button_geometry = {1 [.7 .3] 1 [.46 .27 .27]};
            pre_proc_ver_geometry=  [1 1 1 1];
        end
        skipline_panel ='on';
        
    case 'detrend'
        
        % init_show_addit_kal_options = logical_to_on_off_helper (isequal(grp_proc_info.dtrend_typ,3));
        
        pre_proc_button_list = [{{'style','text','string', 'BEAPP Detrend Settings:'}},...
            {{'style','text','string', 'Select detrend method: '}},...
            {{'style','popupmenu','string', {'mean','linear','Kalman'},...
            'tag','detrend_type_resp','Value',  grp_proc_info.dtrend_typ,...
            'callback', ['beapp_gui_hide_unneeded_inputs(''detrend_type_resp'',',...
            '{''detrend_adv_type_prompt''},''On'',3);']}},...
            {{'style','pushbutton','string', 'Advanced Detrend Settings ', 'tag','detrend_adv_type_prompt','Visible', logical_to_on_off_helper(isequal(grp_proc_info.dtrend_typ,3)),...
            'Callback',['beapp_gui_trigger_adv_settings_panel']}},extra_space_line, extra_space_line];
        
        pre_proc_button_geometry = {1 [.7 .3] [.46 .27 .27]};
        pre_proc_ver_geometry=  [1 1 1];
        skipline_panel ='on';
end

 [adv_pre_proc_button_list,adv_pre_proc_button_geometry,adv_pre_proc_ver_geometry] =...
    beapp_gui_adv_preproc_settings_prep(current_sub_panel,grp_proc_info);